<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>你的项目中是否还在使用HTTP而非HPPTS</title>
    <url>/posts/bb35cfaa/</url>
    <content><![CDATA[<html><head><link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script></head><body><p>在开发过程中，http(s)可以帮我们做很多事，比如获取图片、下载文件、请求数据等等可以说是非常方便。但是如果你认真观察过你就会发现，当你访问只支持http的网站时，浏览器会警告我们这个连接不安全，同样当你在高版本的Android或者iOS系统中使用http时,也会收到一些警告或者错误，它们都会建议你使用经过SSL加密后的https而非不加密的http。</p>
<p>Android从9.0/P开始，处于安全性考虑默认不允许使用http请求了，所以如果打包时你选择的Target API Level大于27(不包括27)并且没有配置是否允许使用http请求，就会抛出异常：<strong>W/System.err: java.io.IOException: Cleartext HTTP traffic to ** not permitted</strong>。当然你可以通过配置AndroidMainfest.xml文件，在application标签下新增android:usesCleartextTraffic=”true”，或者降低Target API Level来继续使用http。</p>
<p>在iPhone上，当你在Xcode上运行你的程序，第一次进行http请求时，会收到这样的警告：<strong>You are using download over http. Currently Unity adds NSAllowsArbitraryLoads to Info.plist to simplify transition, but it will be removed soon. Please consider updating to https</strong>，就是说你仍可以将NSAppTransportSecurity添加到info.plist中来使用http，但这将是将来删除。建议您从现在开始使用https连接。</p>
<p>也就是说项目当中能使用https尽量使用https，至少在我们可以选择的时候，一定要选择https。</p>
</body></html>]]></content>
  </entry>
  <entry>
    <title>AppStore上架：Unity插件实现内购审核不通过</title>
    <url>/posts/3549087f/</url>
    <content><![CDATA[<html><head><link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script></head><body><hr>
<p>相信不少参加工作后有一定经济能力的朋友，或多或少都会想要拥有一台属于自己的iPhone。不得不承认，苹果设备以时尚整洁的外观以及流畅的操作系统获得了广大用户群体的喜爱。而作为开发者而言，想要发布iOS App，无非只能使用企业签名或者上架AppStore两种方式，然而企业签名不仅价格昂贵，还会经常会掉签。相比之下上架AppStore仍是首选。然而想要上架成功，必须要通过AppStore的审核，尽管我们有苹果发布的审核指南作参考，但是呢还是不能避免被拒决，何况被拒时审核人员回复的邮件往往不会明确说明具体哪个功能违规，只会列举出违反了哪一条款，而且不会一次审完所有内容。</p>
<p>今天谈谈AppStore内购，众所周知苹果的内购会抽取30%分成，因为我们的项目道具收费，所以必须接入苹果内购，当时同事使用的是Unity自带的In-App Purchasing实现的内购，后来审核就一直没有通过，被拒理由一直是含有隐藏功能并给警告及延迟审核，这算是比较严重的一种，当时甚至收到了封号警告，后来经过仔细排查判断是内购插件的问题，因为苹果审核人员稍微透露了一下说是让认真检查有关支付代码，所以就花了两天时间改为使用苹果原生实现内购，再次提交，果然就通过了审核！</p>
<p>经过检查，我发现Unity自带的内购插件包里面不仅包含苹果内购还包含Google和FaceBook等支付代码，这下就真相了。本来AppStore就对付有关的内容的审核就非常严格，比如项目中包含支付宝、微信等第三方支付代码，就算没有使用也不会通过审核。当然也有部分App在审核通过后使用H5等方式来跳过苹果内购，但是这类App一旦被举报或者复查，就会被立刻封号。</p>
</body></html>]]></content>
  </entry>
  <entry>
    <title>Unity导出为XCode工程后无法选择iPhone模拟器运行</title>
    <url>/posts/e05b8785/</url>
    <content><![CDATA[<html><head><link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script></head><body><p>在手边正好没有苹果测试机，或者想要调试某个机型、系统的时候，身边又没有的时候后，就轮到模拟器出场了！</p>
<p>但是当我们正常导出Unity项目为XCode工程时，设备上明明安装了iPhone模拟器，却并发现没有模拟器运行选项。</p>
<p>后来发现需要将Unity项目导出时设置PlayerSettings Settings for iOS中的Target SDK 为Simulator SDK才可以使用。</p>
</body></html>]]></content>
  </entry>
  <entry>
    <title>Android SDKManager无法正常升级SDK</title>
    <url>/posts/decfd98d/</url>
    <content><![CDATA[<html><head><link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script></head><body><p>在使用Unity导出安卓apk的时候，我们经常需要配置打包环境，如果不安装Android Studio的话，我们一般会选择下载ADT Bundle。</p>
<p>这里我推荐两个国内的安卓开发工具下载网站<a href="http://www.android-studio.org" target="_blank" rel="noopener">http://www.android-studio.org</a> 和<a href="https://www.androiddevtools.cn" target="_blank" rel="noopener">https://www.androiddevtools.cn</a></p>
<p>ADT Bundle下载完成之后，打包时可能还需要启动手动升级Android SDK，那这个时候问题就来了。启动Android SDKManager后怎么也无法连接到dl.google.com来进行SDK的升级，经过一段时间摸索后发现配置host是最有效的方式。</p>
<p>1.访问站长之家的站长工具：<a href="http://tool.chinaz.com/" target="_blank" rel="noopener">http://tool.chinaz.com/</a></p>
<p>2.使用网站中的国内测速工具来测试dl-ssl.google.com</p>
<p>3.记录ping值最低的ip，比如我这里是172.217.194.93</p>
<p>4.打开C:\Windows\System32\drivers\etc\hosts 文件</p>
<p>5.在文件的最下面添加172.217.194.93 dl-ssl.google.com</p>
</body></html>]]></content>
  </entry>
  <entry>
    <title>pattern not found</title>
    <url>/posts/36490/</url>
    <content><![CDATA[<html><head><link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script></head><body><p>谈起Unity破解相关的问题，如果你是一名Unity开发者，那么肯定就不会陌生。<br>因为Unity虽然提供了个人版，但是个人版打包后会带有的水印，无法在产品上线时使用。<br>所以无论是为了节约成本还是为了方便使用，中小企业或独立开发者往往还是会选择破解。<br>如果你以前破解过或者安装了多个版本的Unity，在再次破解时就有可能会提示“pattern not found”破解失败。</p>
<h2 id="方案一-重新安装"><a href="#方案一-重新安装" class="headerlink" title="方案一 重新安装"></a>方案一 重新安装</h2><p>删除C:\ProgramData\Unity目录，重新安装Unity。安装完成后不要运行直接破解。</p>
<h2 id="方案二-重新加载许可证"><a href="#方案二-重新加载许可证" class="headerlink" title="方案二 重新加载许可证"></a>方案二 重新加载许可证</h2><p>检查破解后是否在C:\ProgramData\Unity目录(ProgramData为隐藏文件夹)下生成Unity_lic.ulf，<br>尝试启动Unity，使用账号登录，随便打开一个工程，点击菜单栏Help/Manage License 选择Manual Activation/Load License。</p>
<h2 id="方案三-下载国外版Unity"><a href="#方案三-下载国外版Unity" class="headerlink" title="方案三 下载国外版Unity"></a>方案三 下载国外版Unity</h2><p>登录Unity国外官网，可能需要翻墙，下载安装你需要的Unity版本，安装完成后尝试破解。</p>
<h2 id="方案四-直接拷贝相关文件"><a href="#方案四-直接拷贝相关文件" class="headerlink" title="方案四 直接拷贝相关文件"></a>方案四 直接拷贝相关文件</h2><p>如果你像我一样，试过上面所办法，可能他们曾经管用过，但是后面不管用了，可以尝试直接拷贝破解相关的文件完成破解。<br>首先需要有一台电脑可以成功破解Unity，有同事可以找同事借，没有同事可以用其他电脑，没有其他电脑可以安装虚拟机 等。<br>拷贝这台电脑上的C:\ProgramData\Unity文件夹和Unity安装目录的Unity.exe文件到你的电脑上替换到相关目录的文件即可。</p>
<h1 id><a href="#" class="headerlink" title></a></h1></body></html>]]></content>
  </entry>
  <entry>
    <title>你的Windows10许可证即将到期</title>
    <url>/posts/62056/</url>
    <content><![CDATA[<html><head><link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script></head><body><p>最近电脑系统升级，升级后每次开机都会弹出“你的Windows10许可证即将过期”。<br>如果你跟我一样不是购买微软官网激活码激活的话，肯定也会经常遇到这个问题。<br>这个时候我们需要重新激活我们的W10系统，这里我推荐一个激活工具KMSpico。</p>
</body></html>]]></content>
  </entry>
  <entry>
    <title>你好2020</title>
    <url>/posts/20473/</url>
    <content><![CDATA[<html><head><link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script></head><body><p>转眼又是新的一年，回过头来发现已经是成为别人口中的“程序猿”的第三个年头。<br>过去的时间里，总有一部分工作总是做了就忘，忘了又做。<br>新的一年，希望通过写博客的方式，总结开发过程中遇到的一些问题。<br>可以在积累技术经验的同时，帮助自己和同行少爬一些“坑”，毕竟在实际开发中往往是时间紧，任务重。</p>
</body></html>]]></content>
  </entry>
</search>
